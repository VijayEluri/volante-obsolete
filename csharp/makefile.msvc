# nmake -f makefile.msvc
# Arguments:
# CFG=[dbg|rel] (default: dbg)
# OMIT_XML=[yes|no] - default: no
# OMIT_REPLICATION=[yes|no] - default: no
# FOR_PARTCOVER=[yes|no] - default: no

CSC=csc
CSC_FLAGS=/debug+ /d:SUPPORT_RAW_TYPE

!if "$(CFG)"==""
CFG=dbg
!endif

O=bin\$(CFG)

!if "$(CFG)"=="rel"
CSC_FLAGS=$(CSC_FLAGS) /optimize+
!endif

!if "$(OMIT_XML)"=="yes"
CSC_FLAGS=$(CSC_FLAGS) /d:OMIT_XML
O=$(O)-noxml
!endif

!if "$(OMIT_REPLICATION)"=="yes"
CSC_FLAGS=$(CSC_FLAGS) /d:OMIT_REPLICATION
O=$(O)-norepl
!endif

!if "$(FOR_PARTCOVER)"=="yes"
# PartCover doesn't support 64bit, so force building as x86 so
# we can do code coverage with PartCover under 64-bit OS as well
CSC_FLAGS=$(CSC_FLAGS) /platform:x86
O=$(O)-cov
!endif

EXAMPLES=$(O)\Guess.exe $(O)\IpCountry.exe $(O)\PropGuess.exe $(O)\TestLink.exe \
	$(O)\TestSOD.exe $(O)\TestSSD.exe $(O)\TransparentGuess.exe

TESTS=$(O)\TestBackup.exe $(O)\TestBit.exe $(O)\TestBlob.exe $(O)\TestCompoundIndex.exe \
	$(O)\TestConcur.exe $(O)\TestEnumerator.exe $(O)\TestGC.exe $(O)\TestIndex.exe \
	$(O)\TestIndex2.exe $(O)\TestList.exe $(O)\TestR2.exe $(O)\TestRaw.exe  $(O)\TestRtree.exe \
	$(O)\TestTimeSeries.exe $(O)\TestTtree.exe $(O)\TestXML.exe $(O)\TestReplic.exe \
	$(O)\UnitTestsRunner.exe

LIBRARY=$(O)\NachoDB.dll

all: tests examples

library: $(LIBRARY)

$(LIBRARY): src/*.cs src/impl/*.cs
	$(CSC) $(CSC_FLAGS) /target:library /out:$(LIBRARY) src\*.cs src\impl\*.cs

examples: $(O) $(LIBRARY) $(EXAMPLES)

tests: $(O) $(LIBRARY) $(TESTS)

clean: force
	rmdir /s /q $(O)

$(O): force
	@if not exist $(O) mkdir $(O)

$(O)\TestBackup.exe: tests\TestBackup\TestBackup.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestBit.exe: tests\TestBit\TestBit.cs tests\Tests.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestBlob.exe: tests\TestBlob\TestBlob.cs tests\Tests.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestCompoundIndex.exe: tests\TestCompoundIndex\TestCompoundIndex.cs tests\Tests.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestConcur.exe: tests\TestConcur\TestConcur.cs tests\Tests.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestEnumerator.exe: tests\TestEnumerator\TestEnumerator.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestGC.exe: tests\TestGC\TestGC.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestIndex.exe: tests\TestIndex\TestIndex.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestIndex2.exe: tests\TestIndex2\TestIndex2.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestList.exe: tests\TestList\TestList.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestR2.exe: tests\TestR2\TestR2.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestRaw.exe: tests\TestRaw\TestRaw.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestRtree.exe: tests\TestRtree\TestRtree.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestTimeSeries.exe: tests\TestTimeSeries\TestTimeSeries.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestTtree.exe: tests\TestTtree\TestTtree.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestXML.exe: tests\TestXML\TestXML.cs tests\Tests.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestReplic.exe: tests\TestReplic\TestReplic.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\UnitTestsRunner.exe: tests\UnitTests\UnitTestsRunner.cs tests\Tests.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\Guess.exe: examples\Guess\Guess.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\IpCountry.exe: examples\IpCountry\IpCountry.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\PropGuess.exe: examples\PropGuess\Guess.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestLink.exe: examples\TestLink\TestLink.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestSOD.exe: examples\TestSOD\TestSOD.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TestSSD.exe: examples\TestSSD\TestSSD.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

$(O)\TransparentGuess.exe: examples\TransparentGuess\Guess.cs
	$(CSC) $(CSC_FLAGS) /r:$(LIBRARY) /out:$@ $**

force: ;
