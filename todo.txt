All the possible things to do next.

For both Java and C#:
 * write a test app that scans directories and stores the information
   in the database, to see how big the database is and how fast the access
   is to information about files/directories
 * auto-generate docs and put them on web page
 * better test framework (steal ideas from sqlite?)
 * write docs on how to work on Volante codebase
 * write even more tests
 * make releases and push them to my s3, link from a webpage
 * ambitious: add integrated, small full-text search (maybe port FTS 
   from SQliteSharp but store indexes in NachoDB)
 * write tests to provide 100% code coverage
 * StrongHashTable, WeakHashTable and LruObjectCache could be simplifed by 
   adding findEntry() and removeFoundEntry() functions. Also, instead of using
   custom hashtable, maybe a built-in hash would do (needs benchmarks)

C# specific:
 * fix TestTimeSeries assert
 * make TestBlob verify both before closing and after closing database
 * add Silverligth target and test with Silverlight
 * ambitious: add LINQ support
 * maybe: can BtreePageOfX in Btree.cs be done with generics,
   for shorter code?
 * maybe: can we make Key class use generics, for simpler code?

Java specific:
 * test with other jvms (e.g. http://jamvm.sourceforge.net/)
 * change namespace to volante.org
 * Unix makefile and 
 * maybe: write ant makefile (to make it easy to run from eclipse)

